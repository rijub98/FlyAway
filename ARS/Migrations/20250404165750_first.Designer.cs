// <auto-generated />
using ARS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ARS.Migrations
{
    [DbContext(typeof(ARS_DB_Context))]
    [Migration("20250404165750_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ARS.Models.Bookings", b =>
                {
                    b.Property<int>("Bookings_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bookings_ID"));

                    b.Property<int>("Bookings_Cost")
                        .HasColumnType("int");

                    b.Property<string>("Bookings_Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flights_ID")
                        .HasColumnType("int");

                    b.Property<int>("Passenger_ID")
                        .HasColumnType("int");

                    b.Property<int>("Seats_ID")
                        .HasColumnType("int");

                    b.HasKey("Bookings_ID");

                    b.HasIndex("Flights_ID");

                    b.HasIndex("Passenger_ID");

                    b.HasIndex("Seats_ID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ARS.Models.Flights", b =>
                {
                    b.Property<int>("Flights_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Flights_ID"));

                    b.Property<int>("Flights_Amount")
                        .HasColumnType("int");

                    b.Property<int>("Flights_Duration")
                        .HasColumnType("int");

                    b.Property<string>("Flights_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flights_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flights_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteID")
                        .HasColumnType("int");

                    b.HasKey("Flights_ID");

                    b.HasIndex("RouteID");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("ARS.Models.Passenger", b =>
                {
                    b.Property<int>("Passenger_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Passenger_ID"));

                    b.Property<string>("Passenger_Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger_DOB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger_Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passenger_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Passenger_ID");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("ARS.Models.Routes", b =>
                {
                    b.Property<int>("Route_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Route_ID"));

                    b.Property<string>("Arrival_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Arrival_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure_City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No_Of_Passenger")
                        .HasColumnType("int");

                    b.HasKey("Route_ID");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("ARS.Models.Seats", b =>
                {
                    b.Property<int>("Seats_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seats_ID"));

                    b.Property<int>("Check_In_Baggage_Per_Seat")
                        .HasColumnType("int");

                    b.Property<int>("Flights_ID")
                        .HasColumnType("int");

                    b.Property<int>("Price_Per_Seat")
                        .HasColumnType("int");

                    b.Property<string>("Seats_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Seats")
                        .HasColumnType("int");

                    b.HasKey("Seats_ID");

                    b.HasIndex("Flights_ID");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("ARS.Models.Bookings", b =>
                {
                    b.HasOne("ARS.Models.Flights", "Flight")
                        .WithMany("Bookings")
                        .HasForeignKey("Flights_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ARS.Models.Passenger", "Passenger")
                        .WithMany("Bookings")
                        .HasForeignKey("Passenger_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ARS.Models.Seats", "Seat")
                        .WithMany("Bookings")
                        .HasForeignKey("Seats_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("Passenger");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("ARS.Models.Flights", b =>
                {
                    b.HasOne("ARS.Models.Routes", "Route")
                        .WithMany("Flights")
                        .HasForeignKey("RouteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ARS.Models.Seats", b =>
                {
                    b.HasOne("ARS.Models.Flights", "Flight")
                        .WithMany("Seats")
                        .HasForeignKey("Flights_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("ARS.Models.Flights", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Seats");
                });

            modelBuilder.Entity("ARS.Models.Passenger", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("ARS.Models.Routes", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("ARS.Models.Seats", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
